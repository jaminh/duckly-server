[app:main]
use = egg:duckly
use = config:.development.ini#sensitive

# Development Settings
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
    duckly.pyjade_settings
    pyjade.ext.pyramid
    velruse.providers.google_oauth2
    pyramid_beaker

# Beaker
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = customerskey
session.secret = customerssecret
session.cookie_on_exception = true

# Database
sqlalchemy.url = sqlite:///%(here)s/duckly.sqlite

# Templates
mako.directories = duckly:templates
mako.default_filters =
pyjade.pretty = False

# Authentication (override in .development.ini)
; [app:velruse]
; velruse.google.consumer_key = 
; velruse.google.consumer_secret = 

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, duckly, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_duckly]
level = DEBUG
handlers =
qualname = duckly

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
